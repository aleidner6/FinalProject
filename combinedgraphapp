#anna's app
library(shiny)
library(tidyverse)
library(sportyR) 
library(stringr)
library(rsconnect)
library(fmsb)

cleanlocationdata <- read_csv("https://raw.githubusercontent.com/aleidner6/FinalProject/main/cleanlocationdata.csv")
Full_2021_hitting_stats <- read_csv("https://raw.githubusercontent.com/Ballardk/FinalProject/main/Full_2021_hitting_stats.csv")
#Final_data <- read_csv("https://raw.githubusercontent.com/aleidner6/FinalProject/main/FinalRadarData.csv")
Radar_Chart_data <- Full_2021_hitting_stats %>%
  unite("Name", first_name:last_name,
        sep = " ") %>% 
  arrange(desc(batting_avg)) 

Spider_data <- select(Radar_Chart_data, c(Name, batting_avg , b_total_hits , b_home_run, exit_velocity_avg , barrel_batted_rate, sweet_spot_percent)) %>% 
  add_row(Name = "Mean", batting_avg = 0.2646894 , b_total_hits = 140.447 , b_home_run = 23.2197, exit_velocity_avg = 89.68485	 , barrel_batted_rate = 9.501515, sweet_spot_percent = 34.35076, .before = 1) %>% 
  
  add_row(Name = "Max", batting_avg = 0.5 , b_total_hits = 200 , b_home_run = 50, exit_velocity_avg = 100 , barrel_batted_rate = 25, sweet_spot_percent = 40, .before = 1) %>% 
  add_row(Name = "Min", batting_avg = 0 , b_total_hits = 95 , b_home_run = 0, exit_velocity_avg = 75 , barrel_batted_rate = 0, sweet_spot_percent = 15, .before = 2) %>% 
  
  rename("Batting Avg" = batting_avg,
         "Total Hits" = b_total_hits,
         "Home Runs" = b_home_run ,
         "Exit Velocity Avg" = exit_velocity_avg,
         "Barrel Rate" = barrel_batted_rate,
         "Sweet Spot %" = sweet_spot_percent)

Final_data <- Spider_data %>% 
  column_to_rownames(var = "Name") 


  
ui <- fluidPage(
  selectInput(inputId = "Batter", 
             label = "Select a Player to View Stats:", 
             choices = cleanlocationdata %>%
               arrange(player_name) %>%
               distinct(player_name) %>%
               pull(player_name),
             multiple = FALSE),
             # choices = c("Shohei Ohtani" = "Shohei Ohtani", "Trea Turner" = "Trea Turner", 
             #             "Pete Alonso" = "Pete Alonso", "Juan Soto" = "Juan Soto", 
             #             "Bryce Harper" = "Bryce Harper", "Dansby Swanson" = "Dansby Swanson")),
  # textInput("Batter", 
  #           "Batter",
  #           value = ""),
  selectInput(inputId = "Charts", 
              label = "Select the Hitting Chart:", 
              choices = c("", "Spray Chart", "Radar Chart"), 
              multiple = FALSE),
  submitButton(text = "Create my plot!"),
  splitLayout(plotOutput(outputId = "spraychart"), 
              plotOutput(outputId = "radarchart"))
  )

scaled <- cleanlocationdata %>%
  #filter(Batter %in% input$player_name) %>%
  mutate(x = 2.5 * (hc_x - 125.42)) %>%
  mutate(y = 2.5 * (198.27 - hc_y))
# 
# server <- function(input, output) {
#   react <- reactive({input$Charts
#   })
server <- function(input, output){
  output$spraychart <- renderPlot({
    geom_baseball(league = "MLB") +
      geom_point(data = scaled %>% 
                   filter(player_name == input$Batter),
                 aes(x = x,
                     y = y,
                     color = events))
  })
  output$radarchart <- renderPlot({
    Shiny_filter = Final_data[c("Max", "Min", input$Batter , "Mean"), ]
    
    
    
    colors_border = c(rgb(0.2, 0.5, 0.5, 0.9),
                      rgb(0.8, 0.2, 0.5, 0.9) ,
                      rgb(0.7, 0.5, 0.1, 0.9))
    colors_in = c(rgb(0.2, 0.5, 0.5, 0.4),
                  rgb(0.8, 0.2, 0.5, 0.4) ,
                  rgb(0.7, 0.5, 0.1, 0.4))
    
    radarchart(Shiny_filter,
               pcol = colors_border ,
               pfcol = colors_in ,
               plwd = 4 ,
               plty = 1,
               cglcol = "grey",
               cglty = 1,
               axislabcol = "grey",
               cglwd = 0.8,
               vlcex = 0.8
    )
    
  })
  }
    
    
#   observeEvent(react(), {
#     if(input$Charts == "Spray Chart") {
#       output$HittingChart <- renderPlot({
#         geom_baseball(league = "MLB") +
#           geom_point(data = scaled %>%
#                        filter(player_name == input$Batter),
#                      aes(x = x,
#                          y = y,
#                          color = events))
#       })
#     }
#     
#     else if(input$Charts == "Radar Chart") {
#       output$HittingChart <- renderPlot({
#         Shiny_filter = Final_data[c("Max", "Min", input$Batter , "Mean"), ]
#         
#         
#         
#         colors_border = c(rgb(0.2, 0.5, 0.5, 0.9),
#                           rgb(0.8, 0.2, 0.5, 0.9) ,
#                           rgb(0.7, 0.5, 0.1, 0.9))
#         colors_in = c(rgb(0.2, 0.5, 0.5, 0.4),
#                       rgb(0.8, 0.2, 0.5, 0.4) ,
#                       rgb(0.7, 0.5, 0.1, 0.4))
#         
#         radarchart(Shiny_filter,
#                    pcol = colors_border ,
#                    pfcol = colors_in ,
#                    plwd = 4 ,
#                    plty = 1,
#                    cglcol = "grey",
#                    cglty = 1,
#                    axislabcol = "grey",
#                    cglwd = 0.8,
#                    vlcex = 0.8
#         )
#   })
#   }
# }

shinyApp(ui = ui, server = server)
